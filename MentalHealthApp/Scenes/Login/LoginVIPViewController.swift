//
//  LoginVIPViewController.swift
//  MentalHealthApp
//
//  Created by Dato Khvedelidze on 02.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginVIPDisplayLogic: AnyObject {
    func displayUserValidationOutcome(viewModel: LoginVIP.UserValidation.ViewModel)
}

final class LoginVIPViewController: UIViewController {
    
    // MARK: - Clean Components
    
    private var interactor: LoginVIPBusinessLogic?
    private var router: LoginVIPRoutingLogic?
    
    // MARK: - Outlets
    
    @IBOutlet weak var imageView: UIImageView!
    @IBOutlet weak var titleLabel: UILabel!
    @IBOutlet weak var emailTextField: UITextField!
    @IBOutlet weak var passwordTextField: UITextField!
    @IBOutlet weak var registerSuggestionLabel: UILabel!
    @IBOutlet weak var errorLabel: UILabel!
    @IBOutlet weak var signInButton: UIButton!
    
    // MARK: - Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: - Setup Relationships
    
    private func setup() {
        let viewController = self
        let interactor = LoginVIPInteractor()
        let presenter = LoginVIPPresenter()
        let router = LoginVIPRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupTextFieldDelegates()
        setupElements()
        emailTextField.text = "test@gmail.com"
        passwordTextField.text = "Datunia26"
    }
    
    //MARK: - Private Methods
    
    private func setupTextFieldDelegates() {
        self.emailTextField.delegate = self
        self.passwordTextField.delegate = self
    }
    
    private func setupElements() {
        self.navigationController?.isNavigationBarHidden = true
        self.view.backgroundColor = Constant.Color.mainColor

        errorLabel.alpha = 0
        imageView.image = UIImage(named: "Logo")
        
        Utilities.customLabel(for: titleLabel, size: 28, text: "Mental Health App")
        Utilities.customTextField(for: emailTextField, placeholder: "Email")
        Utilities.customTextField(for: passwordTextField, placeholder: "Password")
        Utilities.customLabel(for: registerSuggestionLabel, size: 20, text: "Don't have an account? Sign up here!")
        Utilities.customLabel(for: errorLabel, size: 20, text: "Please provide a password which will contain valid creditals")
        Utilities.customButton(for: signInButton, title: "Login", cornerRadius: 20, color: Constant.Color.redColor)
        Utilities.highlightedText(for: registerSuggestionLabel, text: "Sign up")
        Utilities.setupTapGestureHideKeyboard(self)
        Utilities.setupTapGestureToChangeView(self, registerSuggestionLabel, #selector(navigateToRegistrationVC))
    }
    
    internal func switchBasedNextTextField(for textField: UITextField) {
        switch textField {
        case self.emailTextField:
            self.passwordTextField.becomeFirstResponder()
        default:
            self.view.endEditing(true)
        }
    }
    
    // MARK: - Actions
    
    @IBAction func loginButtonPressed(_ sender: Any) {
        let validationRequest = LoginVIP.UserValidation.Request(email: emailTextField.text,
                                                                password: passwordTextField.text)
        interactor?.validateUser(request: validationRequest)
    }
}

// MARK: - LoginVIPDisplayLogic

extension LoginVIPViewController: LoginVIPDisplayLogic {
    func displayUserValidationOutcome(viewModel: LoginVIP.UserValidation.ViewModel) {
        Utilities.showOutcume(for: errorLabel, message: viewModel.outcome, isError: viewModel.isError)
        
        if !viewModel.isError {
            self.router?.routeToTabBarVC()
        }
    }
}

// MARK: - LoginVIPRoutingLogic

extension LoginVIPViewController {
    @objc private func navigateToRegistrationVC() {
        router?.routeToRegistrationVC()
    }
}


// MARK: - UITextFieldDelegate

extension LoginVIPViewController: UITextFieldDelegate {
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        self.switchBasedNextTextField(for: textField)
        return true
    }
}
