//
//  HomeVIPViewController.swift
//  MentalHealthApp
//
//  Created by Dato Khvedelidze on 04.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeVIPDisplayLogic: AnyObject {
    func displayUser(viewModel: HomeVIP.GetUser.ViewModel)
    func displayQuote(viewModel: HomeVIP.GetQuote.ViewModel)
}

final class HomeVIPViewController: UIViewController {
    // MARK: - Clean Components
    
    var interactor: HomeVIPBusinessLogic?
    var router: HomeVIPRoutingLogic?
    
    // MARK: - Outlets
    
    @IBOutlet weak var userLabel: UILabel!
    @IBOutlet weak var imageView: UIImageView!
    @IBOutlet weak var quoteHeaderLabel: UILabel!
    @IBOutlet weak var quoteLabel: UILabel!
    @IBOutlet weak var likeButtonOutlet: LikeButton!
    @IBOutlet weak var generateButtonOutlet: UIButton!

    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup Relationships
    
    private func setup() {
        let viewController = self
        let interactor = HomeVIPInteractor()
        let presenter = HomeVIPPresenter()
        let router = HomeVIPRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        fetchUser()
        setupElements()
    }

    // MARK: - Private Methods
    
    private func fetchUser() {
        interactor?.getUser(request: HomeVIP.GetUser.Request())
    }
    
    private func setupElements() {
        self.view.backgroundColor = Constant.Color.lightGreenColor

        imageView.image = Constant.Image.cuteBrain
        imageView.contentMode = .scaleAspectFit
        likeButtonOutlet.isHidden = true

        setupQuoteLabel()
        Utilities.customLabel(for: userLabel, size: 24, text: "Welcome, \n How are you feeling today?")
        Utilities.customLabel(for: quoteHeaderLabel, size: 22, text: "Today's quoteüëáüèª")
        Utilities.customLabel(for: quoteLabel, size: 20, text: "Press Next button to generate new quote")
        Utilities.customButton(for: generateButtonOutlet, title: "Next", cornerRadius: 20, color: Constant.Color.greenColor)
    }
    
    private func setupQuoteLabel() {
        quoteLabel.layer.borderWidth = 1
        quoteLabel.layer.cornerRadius = 20
        quoteLabel.layer.backgroundColor = Constant.Color.whiteColor.cgColor
    }
    
    // MARK: - Actions
    
    @IBAction func likeButtonAction(_ sender: Any) {
        let updateQuotesRequest = HomeVIP.UpdateLikedQuotes.Request(quote: quoteLabel.text, clickedLike: likeButtonOutlet.isLiked)
        
        likeButtonOutlet.flipLikedState()
        interactor?.updateLikedQuotes(request: updateQuotesRequest)
    }
    
    @IBAction func generateButtonAction(_ sender: Any) {
        let getQuoteRequest = HomeVIP.GetQuote.Request()
        
//        FIXME: try to move this logic in interactor
        if likeButtonOutlet.isLiked {
            likeButtonOutlet.flipLikedState()
        }

        interactor?.getQuote(request: getQuoteRequest)
    }
}

// MARK: - HomeVIPDisplayLogic

extension HomeVIPViewController: HomeVIPDisplayLogic {
    func displayQuote(viewModel: HomeVIP.GetQuote.ViewModel) {
        quoteLabel.text = viewModel.quote
        likeButtonOutlet.isHidden = false
    }
    
    func displayUser(viewModel: HomeVIP.GetUser.ViewModel) {
        userLabel.text = viewModel.user
    }
}
