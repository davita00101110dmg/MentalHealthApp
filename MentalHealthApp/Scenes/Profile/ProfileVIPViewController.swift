//
//  ProfileVIPViewController.swift
//  MentalHealthApp
//
//  Created by Dato Khvedelidze on 06.09.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProfileVIPDisplayLogic: AnyObject {
    func displayUserInfo(viewModel: ProfileVIP.GetUserInfo.ViewModel)
}

final class ProfileVIPViewController: UIViewController {
    // MARK: - Clean Components
    
    var interactor: ProfileVIPBusinessLogic?
    var router: ProfileVIPRoutingLogic?
    
    // MARK: - Outlets
    
    @IBOutlet weak var logoutButton: UIButton!
    @IBOutlet weak var titleLabel: UILabel!
    @IBOutlet weak var profilePictureImage: UIImageView!
    @IBOutlet weak var fullnameLabel: UILabel!
    @IBOutlet weak var yourLikedQuotesLabel: UILabel!
    @IBOutlet weak var collectionViewOutlet: UICollectionView!
    
    // MARK: - Fields
    
    private var quotes = [String]() {
        didSet {
            collectionViewOutlet.reloadData()
        }
    }
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup Relationships
    
    private func setup() {
        let viewController = self
        let interactor = ProfileVIPInteractor()
        let presenter = ProfileVIPPresenter()
        let router = ProfileVIPRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        fetchUser()
        setupCollectionView()
        setupElements()
    }
    
    // MARK: - Private Methods
    
    private func fetchUser() {
        interactor?.getUserInfo(request: ProfileVIP.GetUserInfo.Request())
    }
    
    private func setupCollectionView() {
        collectionViewOutlet.delegate = self
        collectionViewOutlet.dataSource = self
        collectionViewOutlet.registerNib(class: QuoteCell.self)
        collectionViewOutlet.layer.cornerRadius = 20
        collectionViewOutlet.backgroundColor = Constant.Color.whiteColor
        
        let customFlowLayout = UICollectionViewFlowLayout()
        customFlowLayout.minimumLineSpacing = 10
        customFlowLayout.scrollDirection = .vertical
        collectionViewOutlet.collectionViewLayout = customFlowLayout
    }
    
    private func setupElements() {
        self.view.backgroundColor = Constant.Color.lightGreenColor
        
        profilePictureImage.image = UIImage(systemName: "person.crop.circle")
        profilePictureImage.tintColor = .black
        
        Utilities.customLabel(for: titleLabel, size: 28, text: "Profile")
        Utilities.customLabel(for: fullnameLabel, size: 20, text: "Fullname")
        Utilities.customLabel(for: yourLikedQuotesLabel, size: 28, text: "Your liked quotes👇🏻")
        Utilities.customButton(for: logoutButton, title: "Logout", cornerRadius: 10, color: Constant.Color.redColor)
    }
    
    // MARK: - Actions
    
    @IBAction func logoutAction(_ sender: Any) {
        router?.routeToBottomSheet()
    }
}

// MARK: - UICollectionViewDataSource

extension ProfileVIPViewController: UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        quotes.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "QuoteCell", for: indexPath) as! QuoteCell
        let currentQuote = quotes[indexPath.row]
        
        cell.quoteLabel.text = currentQuote
        
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        CGSize(width: collectionView.frame.width, height: 100.0)
    }
}

// MARK: - ProfileVIPDisplayLogic

extension ProfileVIPViewController: ProfileVIPDisplayLogic {    
    func displayUserInfo(viewModel: ProfileVIP.GetUserInfo.ViewModel) {
        fullnameLabel.text = viewModel.fullname
        self.quotes = viewModel.likedQuotes
    }
}
